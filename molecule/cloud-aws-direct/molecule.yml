---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: ec2
lint:
  name: yamllint
  options:
    config-file: .yamllint
platforms:
  # - name: test-aws-centos7-ansible-role-elasticsearch
  #   image: ami-9887c6e7
  #   instance_type: m5.large
  #   region: us-east-1
  #   vpc_subnet_id: subnet-05a2ef2b767afec50
  #   assign_public_ip: false
  #   spot_price: 0.04
  #   security_group_name:
  #     - default
  #   wait_timeout: 1800
  #   ssh_user: centos
  #   groups:
  #     - rhel_family

  - name: test-aws-centos6-ansible-role-elasticsearch
    image: ami-1585c46a
    platform: centos6
    instance_type: m4.large
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: false
    spot_price: 0.04
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: centos
    groups:
     - rhel_family
     - centos6

  # - name: test-aws-ubuntu18-ansible-role-elasticsearch
  #   image: ami-012fd5eb46f56731f
  #   instance_type: m5.large
  #   region: us-east-1
  #   vpc_subnet_id: subnet-05a2ef2b767afec50
  #   assign_public_ip: false
  #   security_group_name:
  #     - default
  #   spot_price: 0.04
  #   wait_timeout: 1800
  #   ssh_user: ubuntu
  #   groups:
  #     - debian_family

  # - name: test-aws-Debian9-ansible-role-elasticsearch
  #   image: ami-003f19e0e687de1cd
  #   instance_type: m5.large
  #   region: us-east-1
  #   vpc_subnet_id: subnet-05a2ef2b767afec50
  #   assign_public_ip: false
  #   spot_price: 0.04
  #   security_group_name:
  #     - default
  #   wait_timeout: 1800
  #   ssh_user: admin
  #   groups:
  #     - debian_family

provisioner:
  name: ansible
  log: false
  inventory:
    group_vars:
      centos6:
        es_config:
          node.name: "{{ ansible_host }}"
          cluster.name: elasticsearch
          network.host: "{{ ansible_host }}"
          http.port: 9200
          bootstrap.system_call_filter: false
  config_options:
    defaults:
      strategy_plugins: /tmp/molecule/plugins/mitogen/ansible_mitogen/plugins/strategy
      # strategy: mitogen_linear
  playbooks:
    create: ../resources/provisioning/AWS/create.yml
    prepare: ../resources/prepare.yml
    destroy: ../resources/provisioning/AWS/destroy.yml
  lint:
    name: ansible-lint
scenario:
  name: cloud-aws-direct
verifier:
  name: testinfra
  options:
    verbose: true
  directory: ../resources/tests/
  lint:
    name: flake8
